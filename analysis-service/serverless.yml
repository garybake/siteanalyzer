service: analysis-service

plugins:
  - serverless-python-requirements

custom:
  bucket: ${env:GBIMAGECLASSIFIER_BUCKET}
  crawlerqueue: ${env:GBIMAGECLASSIFIER_CRAWLERQUEUE}
  analysisqueue: ${env:GBIMAGECLASSIFIER_ANALYSISQUEUE}
  classifiertable: ${env:GBIMAGECLASSIFIER_TABLE}
  region: ${env:AWS_DEFAULT_REGION, 'eu-west-1'}
  accountid: ${env:AWS_ACCOUNT_ID}
  pythonRequirements:
    dockerizePip: non-linux
    zip: true
    slim: true

provider:
  name: aws
  runtime: python3.6
  region: ${env:AWS_DEFAULT_REGION, 'eu-west-1'}
  stage: dev
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: "arn:aws:s3:::${self:custom.bucket}/*"
    - Effect: "Allow"
      Action:
        - "rekognition:*"
      Resource: "*"
    - Effect: Allow
      Action:
        - sqs:ListQueues
      Resource: "arn:aws:sqs:${self:provider.region}:*:*"
    - Effect: Allow
      Action:
        - sqs:ReceiveMessage
        - sqs:DeleteMessage
        - sqs:GetQueueUrl
      Resource: "arn:aws:sqs:*:*:${self:custom.crawlerqueue}"
    - Effect: Allow
      Action:
        - sqs:SendMessage
        - sqs:DeleteMessage
        - sqs:GetQueueUrl
      Resource: "arn:aws:sqs:*:*:${self:custom.analysisqueue}"
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource: 'arn:aws:dynamodb:${self:provider.region}:*:*'



functions:
  crawler:
    handler: handler.analyse_sites
    environment:
      GBIMAGECLASSIFIER_BUCKET: ${self:custom.bucket}
      GBIMAGECLASSIFIER_TABLE: ${self:custom.classifiertable}
      REGION: ${self:custom.region}
      AWS_ACCOUNT_ID: ${self:custom.accountid}
    events:
      - sqs:
          arn: "arn:aws:sqs:${self:provider.region}:${env:AWS_ACCOUNT_ID}:${self:custom.analysisqueue}"

